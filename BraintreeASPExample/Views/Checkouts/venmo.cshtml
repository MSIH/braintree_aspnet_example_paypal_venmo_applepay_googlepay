@*@{ Layout = "~/Views/Shared/_Layout.cshtml"; }*@

<div class="wrapper">
    <div class="checkout container">

        <header>
            <h1>Hi, <br>Let's test a transaction</h1>
            <p>
                Make a test payment with Braintree using PayPal or a card
            </p>
        </header>

        <form id="payment-form" method="post" action="/checkouts">
            <section>
                <label for="amount">
                    <span class="input-label">Amount</span>
                    <div class="input-wrapper amount-wrapper">
                        <input id="amount" name="amount" type="tel" min="1" placeholder="Amount" value="10">
                    </div>
                </label>

                <div class="bt-drop-in-wrapper">
                    <div id="bt-dropin"></div>
                </div>
            </section>

            <input id="nonce" name="payment_method_nonce" type="hidden" />
            <button class="button" type="submit"><span>Test Transaction</span></button>
        </form>
        <div id="paypal-button"></div>
    </div>
</div>

<!-- Load the client component. -->
<script src="https://js.braintreegateway.com/web/3.85.2/js/client.min.js"></script>

<!-- Load the PayPal Checkout component. -->
<script src="https://js.braintreegateway.com/web/3.85.2/js/paypal-checkout.min.js"></script>

<script>
    var client_token = "@ViewBag.ClientToken";
    var form = document.querySelector('#payment-form');

    //braintree.dropin.create({
    //    authorization: client_token,
    //    container: '#bt-dropin'

    //}, function (createErr, instance) {
    //    form.addEventListener('submit', function (event) {
    //        event.preventDefault();

    //        instance.requestPaymentMethod(function (err, payload) {
    //            if (err) {
    //                console.log('Error', err);
    //                return;
    //            }

    //            // Add the nonce to the form and submit
    //            document.querySelector('#nonce').value = payload.nonce;
    //            form.submit();
    //        });
    //    });
    //});

    braintree.client.create({
        authorization: client_token
    }, function (clientErr, clientInstance) {

        // Create a PayPal Checkout component.
        braintree.paypalCheckout.create({
            client: clientInstance
        }, function (paypalCheckoutErr, paypalCheckoutInstance) {
            paypalCheckoutInstance.loadPayPalSDK({
                currency: 'USD',
                intent: 'capture'
            }, function () {
                paypal.Buttons({
                    fundingSource: paypal.FUNDING.PAYPAL,

                    createOrder: function () {
                        return paypalCheckoutInstance.createPayment({
                            flow: 'checkout', // Required
                            amount: 10.00, // Required
                            currency: 'USD', // Required, must match the currency passed in with loadPayPalSDK

                            intent: 'capture', // Must match the intent passed in with loadPayPalSDK

                            enableShippingAddress: true,
                            shippingAddressEditable: false,
                            shippingAddressOverride: {
                                recipientName: 'Scruff McGruff',
                                line1: '1234 Main St.',
                                line2: 'Unit 1',
                                city: 'Chicago',
                                countryCode: 'US',
                                postalCode: '60652',
                                state: 'IL',
                                phone: '123.456.7890'
                            }
                        });
                    },

                    onApprove: function (data, actions) {
                        return paypalCheckoutInstance.tokenizePayment(data, function (err, payload) {
                            // Submit `payload.nonce` to your server
                        });
                    },

                    onCancel: function (data) {
                        console.log('PayPal payment cancelled', JSON.stringify(data, 0, 2));
                    },

                    onError: function (err) {
                        console.error('PayPal error', err);
                    }
                }).render('#paypal-button').then(function () {
                    // The PayPal button will be rendered in an html element with the ID
                    // `paypal-button`. This function will be called when the PayPal button
                    // is set up and ready to be used
                });
            });
        });
    });

</script>
<script src="/App_Themes/javascript/demo.js"></script>
